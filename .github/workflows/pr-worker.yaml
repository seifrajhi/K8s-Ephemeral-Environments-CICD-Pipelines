name: worker PR
on:
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - main
    paths:
      - 'worker/**'
jobs:
  pr-deploy:
    runs-on: self-hosted
    timeout-minutes: 10

    env:
      VERSION: ${GITHUB_REF##*/}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.DOCKER_USERNAME }}
      REGISTRY_PW: ${{ secrets.DOCKER_PASSWORD  }}
    steps:
      - uses: actions/checkout@v2
        name: checkout
        with:
          persist-credentials: false

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        run: ./scripts/build-image.sh worker pr-${{ github.event.pull_request.number }}

      - name: Publish
        run: ./scripts/push-image.sh worker pr-${{ github.event.pull_request.number }}


      - name: install kubectl
        run: |
          sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl";
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          sudo rm -rf kubectl
          kubectl get pods
          
      - name: install vcluster
        run: |
          curl -L -o vcluster "https://github.com/loft-sh/vcluster/releases/latest/download/vcluster-linux-amd64" && sudo install -c -m 0755 vcluster /usr/local/bin && sudo rm -f vcluster
      - name: create vcluster for PR env
        run: |
          vcluster create worker-pr-${{ github.event.pull_request.number }} --namespace pr-${{ github.event.pull_request.number }} &
          sleep 20
          vcluster connect worker-pr-${{ github.event.pull_request.number }} --namespace pr-${{ github.event.pull_request.number }} &

          sleep 20
          kubectl create ns worker-pr-${{ github.actor_id }};

      - name: install YQ
        run: sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: update image
        run: |
          yq -e -i '.spec.template.spec.containers[0].image="${{ secrets.CONTAINER_REGISTRY }}/ephemeral-envs-worker:pr-${{ github.event.pull_request.number }}"' ./scripts/kubernetes/worker.yaml
          yq -e -i '.spec.template.spec.containers[0].env[1].value="mongodb://db:27017"' ./scripts/kubernetes/worker.yaml

      - name: Update changes
        run: |
          git config --global user.email ${{secrets.ORG}}
          git config --global user.name ${{secrets.USERNAME}}
          git add .
          git commit -m "push image changes for ${{github.sha}}"
      - name: Push to Git
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          repository: ${{ secrets.USERNAME }}/ephemeral-kubernetes-environments

      - name: Deploy
        run: |
          sudo curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | sudo bash && \
          ./kustomize build ./scripts/kubernetes | kubectl apply -f - -n worker-pr-${{ github.actor_id }}

      - name: Artifacting KUBECONFIG Fille
        uses: actions/upload-artifact@v3
        with:
          name: 'pr-${{github.actor}}'
          path: ~/.kube/config
